     1                                  %include "io64.asm"
     2                              <1>          section .text     ; ������� ����
     3                              <1> IntToStr64: 
     4 00000000 57                  <1>          push   rdi
     5 00000001 53                  <1>          push   rbx
     6 00000002 52                  <1>          push   rdx
     7 00000003 51                  <1>          push   rcx
     8 00000004 56                  <1> 		 push   rsi
     9 00000005 C60600              <1> 		 mov    byte[rsi],0 ; �� ����� �����
    10 00000008 83F800              <1>          cmp    eax,0
    11 0000000B 7D05                <1>          jge    .l1
    12 0000000D F7D8                <1>          neg    eax
    13 0000000F C6062D              <1>          mov    byte[rsi],'-'
    14 00000012 C646060A            <1> .l1      mov    byte[rsi+6],10
    15 00000016 BF05000000          <1>          mov    rdi,5
    16 0000001B 66BB0A00            <1>          mov    bx,10
    17 0000001F 6699                <1> .again:  cwd           ; ��������� ����� �� ��������
    18 00000021 66F7F3              <1>          div    bx     ; ����� ��������� �� 10
    19 00000024 80C230              <1>          add    dl,30h ; �������� �� ������� ��� �����
    20 00000027 88143E              <1>          mov    [rsi+rdi],dl ; ����� ������ � ������
    21 0000002A 48FFCF              <1>          dec    rdi    ; ��������� ��������� ��  
    22                              <1>                        ; ���������� �������
    23 0000002D 6683F800            <1>          cmp    ax, 0  ; ������������� ��� �����?
    24 00000031 75EC                <1>          jne    .again
    25 00000033 B906000000          <1>          mov    rcx, 6
    26 00000038 4829F9              <1>          sub    rcx, rdi ; ����� ����������+����
    27 0000003B 4889C8              <1> 		 mov    rax,rcx
    28 0000003E 48FFC0              <1> 		 inc    rax    ; ����� ����������+OA
    29 00000041 48FFC6              <1>          inc    rsi    ; ���������� ����
    30 00000044 56                  <1> 		 push   rsi
    31 00000045 488D343E            <1>          lea    rsi,[rsi+rdi] ; ������ ����������
    32 00000049 5F                  <1> 		 pop    rdi
    33 0000004A F3A4                <1>          rep movsb
    34 0000004C 5E                  <1>          pop    rsi  
    35 0000004D 59                  <1>          pop    rcx
    36 0000004E 5A                  <1>          pop    rdx
    37 0000004F 5B                  <1>          pop    rbx
    38 00000050 5F                  <1>          pop    rdi
    39 00000051 C3                  <1>          ret
    40                              <1> StrToInt64:
    41 00000052 57                  <1>          push   rdi
    42 00000053 B739                <1>          mov    bh, '9'
    43 00000055 B330                <1>          mov    bl, '0'
    44 00000057 56                  <1>          push   rsi     ; ��������� ����� �������� ������
    45 00000058 803E2D              <1>          cmp    byte[rsi], '-'
    46 0000005B 7503                <1>          jne    .prod
    47 0000005D 48FFC6              <1>          inc    rsi     ; ���������� ����
    48 00000060 FC                  <1> .prod    cld
    49 00000061 6631FF              <1>          xor    di, di  ; �������� ������� �����
    50 00000064 AC                  <1> .cycle:  lodsb          ; ��������� ������ (�����)
    51 00000065 3C0A                <1>          cmp    al, 10  ; ���� 10, �� �� �����
    52 00000067 741F                <1>          je     .Return
    53 00000069 38D8                <1>          cmp    al, bl  ; ���������� � ����� ����
    54 0000006B 722F                <1>          jb     .Error  ; "����" � ������
    55 0000006D 38F8                <1>          cmp    al, bh  ; ���������� � ����� ������ 
    56 0000006F 772B                <1>          ja     .Error  ; "����" � ������
    57 00000071 2C30                <1>          sub    al, 30h ; �������� ����� �� �������
    58 00000073 6698                <1>          cbw            ; ��������� �� �����
    59 00000075 6650                <1>          push   ax      ; ��������� � �����
    60 00000077 66B80A00            <1>          mov    ax, 10  ; ������� 10 � AX
    61 0000007B 66F7E7              <1>          mul    di      ; ��������, ��������� � DX:AX
    62 0000007E 665F                <1>          pop    di      ; � DI � ��������� �����
    63 00000080 6601F8              <1>          add    ax, di
    64 00000083 6689C7              <1>          mov    di, ax  ; � DI � ����������� �����        
    65 00000086 EBDC                <1>          jmp    .cycle
    66 00000088 5E                  <1> .Return: pop    rsi
    67 00000089 BB00000000          <1>          mov    rbx, 0
    68 0000008E 803E2D              <1>          cmp    byte[rsi], '-'
    69 00000091 7503                <1>          jne    .J
    70 00000093 66F7DF              <1>          neg    di
    71 00000096 6689F8              <1> .J       mov    ax, di
    72 00000099 98                  <1>          cwde
    73 0000009A EB0B                <1>          jmp    .R
    74 0000009C 5E                  <1> .Error:  pop    rsi
    75 0000009D B800000000          <1>          mov    rax, 0
    76 000000A2 BB01000000          <1>          mov    rbx, 1
    77 000000A7 5F                  <1> .R       pop    rdi
    78 000000A8 C3                  <1>          ret
     2                                  
     3                                     section .data              
     4 00000000 507265737320456E74-     ExitMsg db "Press Enter to Exit",10  
     4 00000009 657220746F20457869-
     4 00000012 740A               
     5                                  lenExit equ $-ExitMsg
     6 00000014 496E7075742035206E-     InputMsg db "Input 5 numbers with Enter",10  
     6 0000001D 756D62657273207769-
     6 00000026 746820456E7465720A 
     7                                  lenInput equ $-InputMsg
     8 0000002F 496E74657220450A        EMsg db "Inter E",10  
     9                                  lenE equ $-EMsg
    10 00000037 496E74657220420A        BMsg db "Inter B",10  
    11                                  lenB equ $-BMsg
    12 0000003F 496E74657220442028-     DMsg db "Inter D (non 0)",10  
    12 00000048 6E6F6E2030290A     
    13                                  lenD equ $-DMsg
    14 0000004F 496E74657220510A        QMsg db "Inter Q",10  
    15                                  lenQ equ $-QMsg
    16 00000057 496E746572204D0A        MMsg db "Inter M",10  
    17                                  lenM equ $-MMsg
    18                                  
    19                                     section .bss               
    20 00000000 <res Ah>                InBuf   resb    10            
    21                                  lenIn   equ     $-InBuf 
    22 0000000A ????                    Q resw 1
    23 0000000C ????                    E resw 1
    24 0000000E ????                    B resw 1
    25 00000010 ????                    D resw 1
    26 00000012 ????                    M resw 1
    27 00000014 ????                    X resw 1
    28                                  
    29                                  
    30                                          section .text         
    31                                          global  _start
    32                                  _start:
    33                                  
    34 000000A9 B801000000                    mov rax, 1    ; системная функция 1 (write)
    35 000000AE BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    36 000000B3 48BE-                         mov rsi, InputMsg ; адрес выводимой строки
    36 000000B5 [1400000000000000] 
    37 000000BD BA1B000000                    mov rdx, lenInput ; длина строки
    38 000000C2 0F05                          syscall       ; вызов системной функции
    39                                  
    40 000000C4 B801000000                    mov rax, 1    ; системная функция 1 (write)
    41 000000C9 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    42 000000CE 48BE-                         mov rsi, EMsg ; адрес выводимой строки
    42 000000D0 [2F00000000000000] 
    43 000000D8 BA08000000                    mov rdx, lenE ; длина строки
    44 000000DD 0F05                          syscall       ; вызов системной функции
    45                                        
    46 000000DF B800000000                    mov rax, 0      ; системная функция 0 (read)
    47 000000E4 BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
    48 000000E9 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
    48 000000EB [0000000000000000] 
    49 000000F3 BA0A000000                    mov rdx, lenIn  ; длина строки
    50 000000F8 0F05                          syscall         ; вызов системной функции
    51 000000FA E853FFFFFF                    call StrToInt64
    52                                        
    53 000000FF 48890425[0C000000]            mov [E], rax 
    54                                  
    55 00000107 B801000000                    mov rax, 1    ; системная функция 1 (write)
    56 0000010C BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    57 00000111 48BE-                         mov rsi, BMsg ; адрес выводимой строки
    57 00000113 [3700000000000000] 
    58 0000011B BA08000000                    mov rdx, lenB ; длина строки
    59 00000120 0F05                          syscall       ; вызов системной функции
    60                                  
    61 00000122 B800000000                    mov rax, 0      ; системная функция 0 (read)
    62 00000127 BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
    63 0000012C 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
    63 0000012E [0000000000000000] 
    64 00000136 BA0A000000                    mov rdx, lenIn  ; длина строки
    65 0000013B 0F05                          syscall         ; вызов системной функции
    66 0000013D E810FFFFFF                    call StrToInt64
    67                                        
    68 00000142 48890425[0E000000]            mov [B], rax 
    69                                  
    70                                  
    71 0000014A B801000000              input: mov rax, 1    ; системная функция 1 (write)
    72 0000014F BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    73 00000154 48BE-                         mov rsi, DMsg ; адрес выводимой строки
    73 00000156 [3F00000000000000] 
    74 0000015E BA10000000                    mov rdx, lenD ; длина строки
    75 00000163 0F05                          syscall       ; вызов системной функции
    76                                  
    77                                  
    78 00000165 B800000000                    mov eax, 0      ; системная функция 0 (read)
    79 0000016A BF00000000                    mov edi, 0      ; дескриптор файла stdin=0
    80 0000016F BE[00000000]                  mov esi, InBuf  ; адрес вводимой строки
    81 00000174 BA0A000000                    mov edx, lenIn  ; длина строки
    82 00000179 0F05                          syscall         ; вызов системной функции
    83 0000017B E8D2FEFFFF                    call StrToInt64
    84                                        
    85 00000180 66890425[10000000]            mov [D], ax
    86                                  
    87 00000188 668B0425[10000000]            mov ax, [D]
    88 00000190 66BB0000                      mov bx, 0
    89 00000194 6639D8                        cmp ax, bx
    90 00000197 74B1                          je input
    91                                  
    92                                  
    93 00000199 B801000000                    mov rax, 1    ; системная функция 1 (write)
    94 0000019E BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    95 000001A3 48BE-                         mov rsi, QMsg ; адрес выводимой строки
    95 000001A5 [4F00000000000000] 
    96 000001AD BA08000000                    mov rdx, lenQ ; длина строки
    97 000001B2 0F05                          syscall       ; вызов системной функции
    98                                  
    99                                  
   100 000001B4 B800000000                    mov eax, 0      ; системная функция 0 (read)
   101 000001B9 BF00000000                    mov edi, 0      ; дескриптор файла stdin=0
   102 000001BE BE[00000000]                  mov esi, InBuf  ; адрес вводимой строки
   103 000001C3 BA0A000000                    mov edx, lenIn  ; длина строки
   104 000001C8 0F05                          syscall         ; вызов системной функции
   105 000001CA E883FEFFFF                    call StrToInt64
   106                                        
   107 000001CF 66890425[0A000000]            mov [Q], ax 
   108                                  
   109 000001D7 B801000000                    mov rax, 1    ; системная функция 1 (write)
   110 000001DC BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
   111 000001E1 48BE-                         mov rsi, MMsg ; адрес выводимой строки
   111 000001E3 [5700000000000000] 
   112 000001EB BA08000000                    mov rdx, lenM ; длина строки
   113 000001F0 0F05                          syscall       ; вызов системной функции
   114                                  
   115                                  
   116 000001F2 B800000000                    mov eax, 0      ; системная функция 0 (read)
   117 000001F7 BF00000000                    mov edi, 0      ; дескриптор файла stdin=0
   118 000001FC BE[00000000]                  mov esi, InBuf  ; адрес вводимой строки
   119 00000201 BA0A000000                    mov edx, lenIn  ; длина строки
   120 00000206 0F05                          syscall         ; вызов системной функции
   121 00000208 E845FEFFFF                    call StrToInt64
   122                                        
   123 0000020D 890425[12000000]              mov [M], eax
   124                                  
   125 00000214 668B0425[0A000000]              mov ax, [Q]
   126 0000021C 66F7E8                          imul ax    ;q*q
   127 0000021F 668B1C25[12000000]              mov bx, [M]
   128 00000227 66F7EB                          imul bx
   129 0000022A 6689C3                          mov bx, ax
   130 0000022D 668B0425[0C000000]              mov ax, [E]
   131 00000235 662B0425[0E000000]              sub ax, [B]  ;E-B
   132 0000023D 668B0C25[10000000]              mov cx, [D]
   133 00000245 6699                            cwd
   134 00000247 66F7F9                          idiv cx  ;(E-B)/D
   135 0000024A 6629D8                          sub ax,bx
   136 0000024D 6683E802                        sub ax, 2
   137                                          
   138                                  
   139 00000251 98                              cwde
   140 00000252 48BE-                           mov rsi, InBuf
   140 00000254 [0000000000000000] 
   141 0000025C E89FFDFFFF                      call IntToStr64
   142                                  
   143                                      ; write
   144 00000261 4889C2                        mov rdx, rax
   145 00000264 B801000000                    mov rax, 1    ; системная функция 1 (write)
   146 00000269 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
   147 0000026E 0F05                          syscall
   148                                  
   149 00000270 B801000000                    mov rax, 1    ; системная функция 1 (write)
   150 00000275 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
   151 0000027A 48BE-                         mov rsi, ExitMsg ; адрес выводимой строки
   151 0000027C [0000000000000000] 
   152 00000284 BA14000000                    mov rdx, lenExit ; длина строки
   153 00000289 0F05                          syscall       ; вызов системной функции
   154                                  
   155                                      ; read
   156 0000028B B800000000                    mov rax, 0      ; системная функция 0 (read)
   157 00000290 BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
   158 00000295 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
   158 00000297 [0000000000000000] 
   159 0000029F BA0A000000                    mov rdx, lenIn  ; длина строки
   160 000002A4 0F05                          syscall         ; вызов системной функции
   161                                        
   162                                      ; exit
   163 000002A6 B83C000000                    mov rax, 60     ; системная функция 60 (exit)
   164 000002AB 4831FF                        xor rdi, rdi    ; return code 0
   165 000002AE 0F05                          syscall         ; вызов системной функции
