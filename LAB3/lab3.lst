     1                                  %include "io64.asm"
     2                              <1>          section .text     ; ������� ����
     3                              <1> IntToStr64: 
     4 00000000 57                  <1>          push   rdi
     5 00000001 53                  <1>          push   rbx
     6 00000002 52                  <1>          push   rdx
     7 00000003 51                  <1>          push   rcx
     8 00000004 56                  <1> 		 push   rsi
     9 00000005 C60600              <1> 		 mov    byte[rsi],0 ; �� ����� �����
    10 00000008 83F800              <1>          cmp    eax,0
    11 0000000B 7D05                <1>          jge    .l1
    12 0000000D F7D8                <1>          neg    eax
    13 0000000F C6062D              <1>          mov    byte[rsi],'-'
    14 00000012 C646060A            <1> .l1      mov    byte[rsi+6],10
    15 00000016 BF05000000          <1>          mov    rdi,5
    16 0000001B 66BB0A00            <1>          mov    bx,10
    17 0000001F 6699                <1> .again:  cwd           ; ��������� ����� �� ��������
    18 00000021 66F7F3              <1>          div    bx     ; ����� ��������� �� 10
    19 00000024 80C230              <1>          add    dl,30h ; �������� �� ������� ��� �����
    20 00000027 88143E              <1>          mov    [rsi+rdi],dl ; ����� ������ � ������
    21 0000002A 48FFCF              <1>          dec    rdi    ; ��������� ��������� ��  
    22                              <1>                        ; ���������� �������
    23 0000002D 6683F800            <1>          cmp    ax, 0  ; ������������� ��� �����?
    24 00000031 75EC                <1>          jne    .again
    25 00000033 B906000000          <1>          mov    rcx, 6
    26 00000038 4829F9              <1>          sub    rcx, rdi ; ����� ����������+����
    27 0000003B 4889C8              <1> 		 mov    rax,rcx
    28 0000003E 48FFC0              <1> 		 inc    rax    ; ����� ����������+OA
    29 00000041 48FFC6              <1>          inc    rsi    ; ���������� ����
    30 00000044 56                  <1> 		 push   rsi
    31 00000045 488D343E            <1>          lea    rsi,[rsi+rdi] ; ������ ����������
    32 00000049 5F                  <1> 		 pop    rdi
    33 0000004A F3A4                <1>          rep movsb
    34 0000004C 5E                  <1>          pop    rsi  
    35 0000004D 59                  <1>          pop    rcx
    36 0000004E 5A                  <1>          pop    rdx
    37 0000004F 5B                  <1>          pop    rbx
    38 00000050 5F                  <1>          pop    rdi
    39 00000051 C3                  <1>          ret
    40                              <1> StrToInt64:
    41 00000052 57                  <1>          push   rdi
    42 00000053 B739                <1>          mov    bh, '9'
    43 00000055 B330                <1>          mov    bl, '0'
    44 00000057 56                  <1>          push   rsi     ; ��������� ����� �������� ������
    45 00000058 803E2D              <1>          cmp    byte[rsi], '-'
    46 0000005B 7503                <1>          jne    .prod
    47 0000005D 48FFC6              <1>          inc    rsi     ; ���������� ����
    48 00000060 FC                  <1> .prod    cld
    49 00000061 6631FF              <1>          xor    di, di  ; �������� ������� �����
    50 00000064 AC                  <1> .cycle:  lodsb          ; ��������� ������ (�����)
    51 00000065 3C0A                <1>          cmp    al, 10  ; ���� 10, �� �� �����
    52 00000067 741F                <1>          je     .Return
    53 00000069 38D8                <1>          cmp    al, bl  ; ���������� � ����� ����
    54 0000006B 722F                <1>          jb     .Error  ; "����" � ������
    55 0000006D 38F8                <1>          cmp    al, bh  ; ���������� � ����� ������ 
    56 0000006F 772B                <1>          ja     .Error  ; "����" � ������
    57 00000071 2C30                <1>          sub    al, 30h ; �������� ����� �� �������
    58 00000073 6698                <1>          cbw            ; ��������� �� �����
    59 00000075 6650                <1>          push   ax      ; ��������� � �����
    60 00000077 66B80A00            <1>          mov    ax, 10  ; ������� 10 � AX
    61 0000007B 66F7E7              <1>          mul    di      ; ��������, ��������� � DX:AX
    62 0000007E 665F                <1>          pop    di      ; � DI � ��������� �����
    63 00000080 6601F8              <1>          add    ax, di
    64 00000083 6689C7              <1>          mov    di, ax  ; � DI � ����������� �����        
    65 00000086 EBDC                <1>          jmp    .cycle
    66 00000088 5E                  <1> .Return: pop    rsi
    67 00000089 BB00000000          <1>          mov    rbx, 0
    68 0000008E 803E2D              <1>          cmp    byte[rsi], '-'
    69 00000091 7503                <1>          jne    .J
    70 00000093 66F7DF              <1>          neg    di
    71 00000096 6689F8              <1> .J       mov    ax, di
    72 00000099 98                  <1>          cwde
    73 0000009A EB0B                <1>          jmp    .R
    74 0000009C 5E                  <1> .Error:  pop    rsi
    75 0000009D B800000000          <1>          mov    rax, 0
    76 000000A2 BB01000000          <1>          mov    rbx, 1
    77 000000A7 5F                  <1> .R       pop    rdi
    78 000000A8 C3                  <1>          ret
     2                                  
     3                                  section .data              
     4 00000000 507265737320456E74-     ExitMsg db "Press Enter to Exit",10  
     4 00000009 657220746F20457869-
     4 00000012 740A               
     5                                  lenExit equ $-ExitMsg
     6 00000014 496E70757420580A        InputMsg db "Input X",10  
     7                                  lenInput equ $-InputMsg
     8 0000001C 496E74657220410A        AMsg db "Inter A",10  
     9                                  lenA equ $-AMsg
    10 00000024 496E74657220590A        YMsg db "Inter Y",10  
    11                                  lenY equ $-YMsg
    12 0000002C 496E746572204E0A        NMsg db "Inter N",10  
    13                                  lenN equ $-NMsg
    14                                  
    15                                  
    16                                  ; A dd 90
    17                                  ; Y dd 3
    18 00000034 00000000                N dd 0
    19                                  ; X dd -8
    20                                  
    21                                  section .bss               
    22 00000000 <res Ah>                InBuf   resb    10            
    23                                  lenIn   equ     $-InBuf
    24 0000000A ????????                X resd 1
    25 0000000E ????                    A resw 1
    26 00000010 ????                    Y resw 1
    27                                  
    28                                  
    29                                  
    30                                  section .text         
    31                                          global  _start
    32                                  _start:
    33 000000A9 B801000000                    mov rax, 1    ; системная функция 1 (write)
    34 000000AE BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    35 000000B3 48BE-                         mov rsi, InputMsg ; адрес выводимой строки
    35 000000B5 [1400000000000000] 
    36 000000BD BA08000000                    mov rdx, lenInput ; длина строки
    37 000000C2 0F05                          syscall       ; вызов системной функции
    38                                  
    39 000000C4 B800000000                    mov rax, 0      ; системная функция 0 (read)
    40 000000C9 BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
    41 000000CE 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
    41 000000D0 [0000000000000000] 
    42 000000D8 BA0A000000                    mov rdx, lenIn  ; длина строки
    43 000000DD 0F05                          syscall         ; вызов системной функции
    44 000000DF E86EFFFFFF                    call StrToInt64
    45                                        
    46 000000E4 48890425[0A000000]            mov [X], rax
    47                                  
    48 000000EC B801000000                    mov rax, 1    ; системная функция 1 (write)
    49 000000F1 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    50 000000F6 48BE-                         mov rsi, AMsg ; адрес выводимой строки
    50 000000F8 [1C00000000000000] 
    51 00000100 BA08000000                    mov rdx, lenA ; длина строки
    52 00000105 0F05                          syscall       ; вызов системной функции
    53                                  
    54 00000107 B800000000                    mov rax, 0      ; системная функция 0 (read)
    55 0000010C BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
    56 00000111 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
    56 00000113 [0000000000000000] 
    57 0000011B BA0A000000                    mov rdx, lenIn  ; длина строки
    58 00000120 0F05                          syscall         ; вызов системной функции
    59 00000122 E82BFFFFFF                    call StrToInt64
    60                                        
    61 00000127 48890425[0E000000]            mov [A], rax
    62                                       
    63 0000012F 8B0425[0A000000]                mov   eax, [X]
    64                                  
    65 00000136 3B0425[34000000]                cmp   eax, [N]  ; сравнение A и B
    66 0000013D 7E14                            jle    LESS    ; если первое меньше или равно
    67 0000013F 8B0425[0A000000]                mov eax, [X]
    68 00000146 F7E8                            imul eax    ;q*q
    69 00000148 8B1C25[0E000000]                mov ebx, [A]
    70 0000014F F7EB                            imul ebx
    71 00000151 EB78                            jmp   short CONTINUE  ; безусловный переход 
    72                                  LESS:   
    73 00000153 B801000000                input: mov rax, 1    ; системная функция 1 (write)
    74 00000158 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
    75 0000015D 48BE-                         mov rsi, YMsg ; адрес выводимой строки
    75 0000015F [2400000000000000] 
    76 00000167 BA08000000                    mov rdx, lenY ; длина строки
    77 0000016C 0F05                          syscall       ; вызов системной функции
    78                                  
    79 0000016E B800000000                    mov rax, 0      ; системная функция 0 (read)
    80 00000173 BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
    81 00000178 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
    81 0000017A [0000000000000000] 
    82 00000182 BA0A000000                    mov rdx, lenIn  ; длина строки
    83 00000187 0F05                          syscall         ; вызов системной функции
    84 00000189 E8C4FEFFFF                    call StrToInt64
    85                                        
    86 0000018E 48890425[10000000]            mov [Y], rax
    87                                  
    88 00000196 668B0425[10000000]            mov ax, [Y]
    89 0000019E 668B1C25[0A000000]            mov bx, [X]
    90 000001A6 6629D8                        sub ax, bx
    91 000001A9 66BB0000                      mov bx, 0
    92 000001AD 6639D8                        cmp ax, bx
    93 000001B0 74A1                          je input
    94                                  
    95                                  
    96 000001B2 8B1C25[10000000]                mov ebx, [Y]
    97 000001B9 2B1C25[0A000000]                sub ebx, [X]
    98 000001C0 8B0425[0E000000]                mov eax, [A]
    99 000001C7 6699                            cwd
   100 000001C9 F7FB                            idiv ebx
   101                                  
   102                                  CONTINUE:    
   103                                  
   104                                  
   105 000001CB 98                              cwde
   106 000001CC 48BE-                           mov rsi, InBuf
   106 000001CE [0000000000000000] 
   107 000001D6 E825FEFFFF                      call IntToStr64
   108                                  
   109                                      ; write
   110 000001DB 4889C2                        mov rdx, rax
   111 000001DE B801000000                    mov rax, 1    ; системная функция 1 (write)
   112 000001E3 BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
   113 000001E8 0F05                          syscall
   114                                  
   115 000001EA B801000000                    mov rax, 1    ; системная функция 1 (write)
   116 000001EF BF01000000                    mov rdi, 1    ; дескриптор файла stdout=1
   117 000001F4 48BE-                         mov rsi, ExitMsg ; адрес выводимой строки
   117 000001F6 [0000000000000000] 
   118 000001FE BA14000000                    mov rdx, lenExit ; длина строки
   119 00000203 0F05                          syscall       ; вызов системной функции
   120                                  
   121                                      ; read
   122 00000205 B800000000                    mov rax, 0      ; системная функция 0 (read)
   123 0000020A BF00000000                    mov rdi, 0      ; дескриптор файла stdin=0
   124 0000020F 48BE-                         mov rsi, InBuf  ; адрес вводимой строки
   124 00000211 [0000000000000000] 
   125 00000219 BA0A000000                    mov rdx, lenIn  ; длина строки
   126 0000021E 0F05                          syscall         ; вызов системной функции
   127                                        
   128                                      ; exit
   129 00000220 B83C000000                    mov rax, 60     ; системная функция 60 (exit)
   130 00000225 4831FF                        xor rdi, rdi    ; return code 0
   131 00000228 0F05                          syscall         ; вызов системной функции
